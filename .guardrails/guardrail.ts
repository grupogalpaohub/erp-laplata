// .guardrails/guardrail.ts
export function GUARDRAIL_CHECK() {
  console.log("üõ°Ô∏è GUARDRAIL ATIVADO - ERP-V1");

  // 1) Verdades absolutas
  const ABSOLUTE_TRUTHS = [
    "‚úÖ .env.local existe e est√° correto",
    "‚úÖ admin@teste.com existe e √© admin ativo",
    "‚úÖ DB existe e RLS/Policies est√£o ATIVAS e FOR√áADAS",
    "‚úÖ Tenant real ativo: LaplataLunaria",
    "‚úÖ O diret√≥rio do projeto √© ERP-V1 (repo: grupogalpaohub/erp-laplata, branch ERP-V1)",
  ];

  // 2) Proibi√ß√µes absolutas
  const ABSOLUTE_PROHIBITIONS = [
    "‚ùå NUNCA tocar em RLS/policies/fun√ß√µes/triggers/roles do banco",
    "‚ùå NUNCA rodar migra√ß√µes ou DDL sem ordem expl√≠cita do owner",
    "‚ùå NUNCA mexer em .env.local sem instru√ß√£o expl√≠cita",
    "‚ùå NUNCA desabilitar middleware",
    "‚ùå NUNCA criar GRANT ALL / bypass de seguran√ßa",
    "‚ùå NUNCA usar Service Role no client/browser",
    "‚ùå NUNCA pedir Supabase URL/keys/URI ‚îÄ j√° est√£o no .env.local",
    "‚ùå NUNCA alterar UI/UX (cores, tipografia, layout, componentes)",
  ];

  // 3) Processo obrigat√≥rio
  const MANDATORY_PROCESS = [
    "1. Executar somente ap√≥s terminal/log indicar pronto",
    "2. Para qualquer bug: trazer evid√™ncias do Console e Network (print/log) antes de mudar c√≥digo",
    "3. Seguir o protocolo das 3 Provas em caso de erro",
  ];

  // 4) Protocolo 3 Provas
  const THREE_PROOFS_PROTOCOL = [
    "Prova 1: Schema existe",
    "Prova 2: Dados existem",
    "Prova 3: RLS ativo e coerente",
    "Se OK e app n√£o mostra ‚Üí problema no c√≥digo (front/API)",
  ];

  // 5) Diagn√≥stico obrigat√≥rio
  const DIAGNOSTIC_REQUIREMENTS = [
    "Mostrar erros do console do browser",
    "Mostrar requests falhando no network (status/body)",
    "Confirmar que est√° quebrado (passos para reproduzir)",
  ];

  // 6) Regras UI/UX
  const UI_UX_RULES = [
    "üé® N√ÉO alterar UI/UX sem autoriza√ß√£o expl√≠cita",
    "üé® Manter padr√£o visual existente (Tailwind, componentes atuais)",
  ];

  console.table({ ABSOLUTE_TRUTHS, ABSOLUTE_PROHIBITIONS, MANDATORY_PROCESS, THREE_PROOFS_PROTOCOL, DIAGNOSTIC_REQUIREMENTS, UI_UX_RULES });

  return {
    canProceed: false,
    status: "BLOQUEADO - AGUARDANDO AUTORIZA√á√ÉO",
    message: "N√ÉO POSSO FAZER NADA SEM SEGUIR TODOS OS GUARDRAILS",
    nextStep: "Apresentar evid√™ncias e pedir autoriza√ß√£o expl√≠cita"
  };
}

export function PROTOCOL_CHECK(action: string) {
  console.log("üîç PROTOCOLO ATIVADO PARA:", action);
  const steps = [
    "1. INVESTIGAR: Console/Network",
    "2. CONFIRMAR: Evid√™ncias concretas",
    "3. PERGUNTAR: 'Posso fazer X? Autoriza√ß√£o expl√≠cita?'",
    "4. AGUARDAR: ok do owner",
    "5. EXECUTAR: s√≥ ap√≥s autoriza√ß√£o expl√≠cita",
  ];
  steps.forEach(s => console.log(s));
  return {
    action,
    status: "BLOQUEADO - AGUARDANDO AUTORIZA√á√ÉO",
    nextStep: "Evid√™ncias + permiss√£o"
  };
}
