==========================
Cursor Rules — ERP LaPlata (v3, Vercel + Supabase)
==========================

Objetivo: garantir que o ERP rode em produção no Vercel com Supabase real,
impedindo simplificações erradas (SAFE MODE, static export, mocks locais).

==========================
Database Rules
==========================
- Supabase (Postgres) é a **fonte da verdade**.
- SEMPRE introspectar o schema via Supabase types.
- NUNCA inventar tabelas, colunas, enums ou índices.
- Seeds: usar apenas `/supabase/seed`. Nunca criar "dados de exemplo".
- Customizações: sempre via `/supabase/migrations` + `/supabase/functions`.
- Proibido usar `next export`.

==========================
Frontend Rules
==========================
- O frontend roda em **Next.js 14 (App Router)**.
- Build válido: `npm run build` → `.next/`.
- Proibido usar exportação estática (`next export`) → isso quebra SSR/RLS.
- Todas as páginas devem usar dados do **Supabase real**.
- Autenticação: obrigatória com Supabase Auth (Google OAuth).
- O login é **pré-requisito** para acessar o ERP (não pode entrar sem logar).
- UI deve seguir o **padrão Fiori-like** (KPIs, sidebar, tiles, cores #0A6ED1).

==========================
Harmonização
==========================
- Branch de produção: `erp-git`.
- Deploy: Vercel → Root: `frontend`, Build: `npm run build`, Output: `.next`.
- NUNCA tentar Cloudflare Pages para este projeto (somente Vercel).
- Toda alteração de schema: migration em `/supabase/migrations`.

==========================
Anti-Simplificação
==========================
PROIBIDO:
- Criar dados fake.
- Criar arrays/JSON locais como "mock".
- Substituir ENUM por TEXT.
- Exportar app como estático.
- Renderizar telas com placeholder "em breve".
- Usar "SAFE MODE" ou banners de debug.
- Inventar colunas/tabelas para "facilitar".

PERMITIDO:
- Ajustar queries para refletir schema real.
- Criar migrations idempotentes.
- Corrigir chamadas Supabase para respeitar RLS.
- Usar VIEWs existentes (ex: `v_material_overview`).

==========================
Arquitetura Atual
==========================
- **Layout**: Sidebar fixa + header + main content
- **Autenticação**: Middleware de proteção + Google OAuth
- **Módulos**: MM, SD, WH, CRM, FI, CO, Analytics
- **UI**: Tailwind CSS + design Fiori-like
- **Dados**: Server Components + Supabase real
- **Deploy**: Vercel com variáveis de ambiente

==========================
Rotas Obrigatórias
==========================
Todas devem retornar 200 (com autenticação):
- `/` - Home com KPIs e tiles
- `/login` - OAuth Google
- `/auth/callback` - Callback OAuth
- `/mm/catalog` - Catálogo de materiais
- `/mm/vendors` - Fornecedores
- `/mm/purchases` - Compras
- `/sd` - Vendas
- `/sd/orders` - Pedidos de venda
- `/sd/customers` - Clientes
- `/sd/invoices` - Faturas
- `/wh` - Estoque
- `/wh/inventory` - Inventário
- `/wh/movements` - Movimentações
- `/wh/reports` - Relatórios de estoque
- `/crm` - CRM
- `/crm/leads` - Leads
- `/crm/opportunities` - Oportunidades
- `/crm/activities` - Atividades
- `/fi` - Financeiro
- `/fi/payables` - Contas a pagar
- `/fi/receivables` - Contas a receber
- `/fi/cashflow` - Fluxo de caixa
- `/co/dashboard` - Dashboard controle
- `/co/reports` - Relatórios controle
- `/co/costs` - Custos
- `/analytics` - Analytics
- `/setup` - Configurações

==========================
Variáveis de Ambiente
==========================
Obrigatórias no Vercel:
- `NEXT_PUBLIC_SUPABASE_URL`
- `NEXT_PUBLIC_SUPABASE_ANON_KEY`
- `SUPABASE_SERVICE_ROLE_KEY` (server-only)
- `NEXT_PUBLIC_SITE_URL`

==========================
Check antes de PR
==========================
- [ ] Build funciona em Vercel com `.next`.
- [ ] UI segue padrão Fiori (sidebar, KPIs, tiles).
- [ ] Queries usam Supabase (sem mock).
- [ ] Login bloqueia acesso sem autenticação.
- [ ] Branch correta: `erp-git`.
- [ ] Middleware de proteção funcionando.
- [ ] Catálogo conectado ao Supabase real.
- [ ] Error boundaries implementados.
- [ ] Nenhum placeholder "em breve".

==========================
Git Hooks
==========================
- **pre-commit**: Verifica static artifacts, package.json, next.config.js
- **pre-push**: Validações adicionais antes do push
- Proibido commitar: `.vercel/`, `.next/`, `out/`, `node_modules/`

==========================
Troubleshooting
==========================
SE DER ERRO:
1. Reportar mensagem EXATA
2. Explicar causa com tabela/coluna concreta
3. Sugerir UMA via:
   - (A) ajuste de código para aderir ao schema
   - (B) migration DDL mínima
4. NUNCA "resolver" inventando dados ou mudando nomes

==========================
Qualidade & Segurança
==========================
- Usar transações em DDL/DML críticas
- Validar PK/UK/FK/triggers/enums após migrations
- NUNCA expor segredos (usar .env)
- Logs devem citar tabela/coluna e ação sugerida
- RLS (Row Level Security) obrigatório em todas as tabelas
- Isolamento por `tenant_id` em todas as consultas