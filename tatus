[1mdiff --git a/app/api/logout/route.ts b/app/api/logout/route.ts[m
[1mindex f972b40..d2b41ce 100644[m
[1m--- a/app/api/logout/route.ts[m
[1m+++ b/app/api/logout/route.ts[m
[36m@@ -1,14 +1,22 @@[m
[32m+[m[32mexport const runtime = 'nodejs'[m
[32m+[m
 import { NextResponse } from 'next/server'[m
[31m-import { supabaseServer } from '@/src/lib/supabase/server'[m
[32m+[m[32mimport { cookies } from 'next/headers'[m
[32m+[m[32mimport { createServerClient } from '@/src/lib/supabase/server'[m
[32m+[m[32mimport { siteUrl } from '@/src/lib/env'[m
[32m+[m
[32m+[m[32masync function doSignOut() {[m
[32m+[m[32m  const supabase = createServerClient({ cookies })[m
[32m+[m[32m  try { await supabase.auth.signOut() } catch {}[m
[32m+[m[32m}[m
 [m
 export async function POST() {[m
[31m-  try {[m
[31m-    const sb = supabaseServer()[m
[31m-    await sb.auth.signOut()[m
[31m-    [m
[31m-    return NextResponse.json({ success: true, message: 'Logged out successfully' })[m
[31m-  } catch (error) {[m
[31m-    console.error('Logout error:', error)[m
[31m-    return NextResponse.json({ success: false, error: 'Logout failed' }, { status: 500 })[m
[31m-  }[m
[32m+[m[32m  await doSignOut()[m
[32m+[m[32m  const to = new URL('/login', siteUrl())[m
[32m+[m[32m  return NextResponse.redirect(to, { status: 303 })[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport async function GET() {[m
[32m+[m[32m  // Suporte a GET porque o Next pode pr√©-buscar ou o link pode usar href[m
[32m+[m[32m  return POST()[m
 }[m
[1mdiff --git a/app/login/page.tsx b/app/login/page.tsx[m
[1mindex 1f9386d..3e61cab 100644[m
[1m--- a/app/login/page.tsx[m
[1m+++ b/app/login/page.tsx[m
[36m@@ -1,5 +1,6 @@[m
 import Link from 'next/link'[m
 import { supabaseServer } from '@/src/lib/supabase/server'[m
[32m+[m[32mimport { hasSession } from '@/src/lib/auth'[m
 import LoginClient from './LoginClient'[m
 [m
 export const dynamic = 'force-dynamic'[m
[36m@@ -10,6 +11,11 @@[m [mexport async function generateMetadata() {[m
 [m
 export default async function LoginPage({ searchParams }: { searchParams?: { next?: string } }) {[m
   const next = searchParams?.next || '/'[m
[32m+[m[41m  [m
[32m+[m[32m  if (!hasSession()) {[m
[32m+[m[32m    return <LoginClient next={next} />[m
[32m+[m[32m  }[m
[32m+[m
   const supabase = supabaseServer()[m
   const { data: { user } } = await supabase.auth.getUser()[m
 [m
[1mdiff --git a/app/page.tsx b/app/page.tsx[m
[1mindex e4cb086..e321756 100644[m
[1m--- a/app/page.tsx[m
[1m+++ b/app/page.tsx[m
[36m@@ -1,10 +1,19 @@[m
 import { supabaseServer } from '@/src/lib/supabase/server'[m
[31m-import { getTenantId } from '@/src/lib/auth'[m
[32m+[m[32mimport { getTenantId, hasSession } from '@/src/lib/auth'[m
 import KpiCard from '@/src/components/KpiCard'[m
 import ModuleTile from '@/src/components/ModuleTile'[m
 import { Package, ShoppingCart, Warehouse, Plus, TrendingUp, AlertTriangle, Users, BarChart3, DollarSign } from 'lucide-react'[m
 [m
 async function getKPIs() {[m
[32m+[m[32m  if (!hasSession()) {[m
[32m+[m[32m    return {[m
[32m+[m[32m      ordersToday: 0,[m
[32m+[m[32m      monthRevenue: 0,[m
[32m+[m[32m      activeLeads: 0,[m
[32m+[m[32m      criticalStock: 0[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
   const supabase = supabaseServer()[m
   const tenantId = await getTenantId()[m
 [m
[1mdiff --git a/middleware.ts b/middleware.ts[m
[1mindex c2b78fb..e89575a 100644[m
[1m--- a/middleware.ts[m
[1m+++ b/middleware.ts[m
[36m@@ -2,16 +2,7 @@[m [mimport type { NextRequest } from 'next/server'[m
 import { NextResponse } from 'next/server'[m
 [m
 export const config = {[m
[31m-  matcher: [[m
[31m-    /*[m
[31m-     * Match all request paths except for the ones starting with:[m
[31m-     * - api (API routes)[m
[31m-     * - _next/static (static files)[m
[31m-     * - _next/image (image optimization files)[m
[31m-     * - favicon.ico (favicon file)[m
[31m-     */[m
[31m-    '/((?!api|_next/static|_next/image|favicon.ico).*)',[m
[31m-  ],[m
[32m+[m[32m  matcher: ['/((?!_next/static|_next/image|favicon.ico|assets|public|api).*)'],[m
 }[m
 [m
 const PUBLIC_PATHS = new Set<string>([[m
[1mdiff --git a/src/lib/auth.ts b/src/lib/auth.ts[m
[1mindex 2d8ae95..24412b7 100644[m
[1m--- a/src/lib/auth.ts[m
[1m+++ b/src/lib/auth.ts[m
[36m@@ -1,4 +1,10 @@[m
 import { supabaseServer } from './supabase/server'[m
[32m+[m[32mimport { cookies } from 'next/headers'[m
[32m+[m
[32m+[m[32mexport function hasSession() {[m
[32m+[m[32m  const c = cookies()[m
[32m+[m[32m  return c.has('sb-access-token') || c.has('sb:token') || c.has('supabase-auth-token')[m
[32m+[m[32m}[m
 [m
 export async function getTenantId(): Promise<string> {[m
   const supabase = supabaseServer()[m
